name: "Blue/Green Beanstalk"
description: "GitHub Action to automate deployment to Blue/Green environments on AWS Elastic Beanstalk."
inputs:
  app_name:
    description: "Name of the Elastic Beanstalk application. If it doesn't exist, it will be created."
    required: true
  aws_access_key_id:
    description: "AWS Access Key ID. May instead be specified via the AWS_ACCESS_KEY_ID environment variable."
    required: false
  aws_region:
    description: "AWS region. May instead be specified via the AWS_REGION environment variable."
    required: false
  aws_secret_access_key:
    description: "AWS Secret Access Key. May instead be specified via the AWS_SECRET_ACCESS_KEY environment variable."
    required: false
  aws_session_token:
    description: "AWS session token for using temporary credentials. May instead be specified via the AWS_SESSION_TOKEN environment variable."
    required: false
  blue_env:
    description: "Name of the Blue environment."
    required: true
  deploy:
    description: "Whether to deploy the new application version to the target environment."
    required: true
    default: true
  green_env:
    description: "Name of the Green environment."
    required: true
  platform_branch_name:
    description: "Name of the platform branch to use. When creating a new environment, it will be launched with the latest version of the specified platform branch. To see the list of available platform branches, run the `aws elasticbeanstalk list-platform-branches` command."
    required: true
  ports:
    description: "Comma-separated list of ALB listener ports for use with the `shared_alb` strategy. When using the action to create an ALB, HTTP listeners will be created for each port. When using an existing ALB, the action will update each port's default listener rule to point to the target environment if `promote` is set to true."
    required: true
    default: "80"
  production_cname:
    description: "CNAME prefix for the domain that serves production traffic. Only required for the `swap_cnames` strategy."
    required: false
  promote:
    description: "Whether to promote the target environment to production. When using the `swap_cnames` strategy, the action will swap the CNAMEs of the blue and green environments to redirect production traffic to the target environment. When using the `shared_alb` strategy, the action will update the shared Application Load Balancer's default listener rule to point to the target environment, replacing the other environment."
    required: true
    default: true
  staging_cname:
    description: "CNAME prefix for the staging environment when using the `swap_cnames` strategy."
    required: false
  source_bundle:
    description: "Path to the source bundle to deploy. If not specified, the sample application will be used."
    required: false
  strategy:
    description: "Deployment strategy to use: `swap_cnames` or `shared_alb`. See the `promote` input description for more details."
    required: true
    default: "swap_cnames"
  template_name:
    description: "Name of an Elastic Beanstalk configuration template to use when creating a new environment."
    required: false
  terminate_unhealthy_environment:
    description: "Whether to terminate an unhealthy target environment. If set to false, the action will exit with an error when the target environment is unhealthy."
    required: true
    default: true
  version_description:
    description: "Description to use for the new application version."
    required: false
  version_label:
    description: "Version label to use for the new application version."
    required: false
  wait_for_environment:
    description: "Whether to wait for an environment to update or terminate. If set to false, the action will exit with a non-error code during deployment, or exit with an error when the environment is terminating or otherwise not ready."
    required: true
    default: true
  use_default_option_settings:
    description: "Whether to use default option settings when creating a new environment."
    required: true
    default: true
outputs:
  target_env_cname:
    description: "CNAME of the target environment."
  target_env_endpoint_url:
    description: "URL of the environment's load balancer, or an Elastic IP address when using a single instance environment."
  target_env_id:
    description: "ID of the target environment."
  target_env_json:
    description: "JSON representation of the target environment."
  target_env_name:
    description: "Name of the target environment."
  target_env_status:
    description: "Status of the target environment."
runs:
  using: "node20"
  main: "dist/index.js"

branding:
  icon: "arrow-up"
  color: "orange"
