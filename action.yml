name: "Blue/Green Beanstalk"
description: "Deploy to blue/green environments on AWS Elastic Beanstalk."
inputs:
  app_name:
    description: "Name of the Elastic Beanstalk application. If it doesn't exist, it will be created."
    required: true
  aws_access_key_id:
    description: "AWS Access Key ID. May instead be specified via the AWS_ACCESS_KEY_ID environment variable."
  aws_region:
    description: "AWS region. May instead be specified via the AWS_REGION environment variable."
  aws_secret_access_key:
    description: "AWS Secret Access Key. May instead be specified via the AWS_SECRET_ACCESS_KEY environment variable."
  aws_session_token:
    description: "AWS session token for using temporary credentials. May instead be specified via the AWS_SESSION_TOKEN environment variable."
  blue_env:
    description: "Name of the blue environment."
    required: true
  create_environment:
    description: "Whether to create a new environment during deployment if the target environment doesn't exist."
    default: "true"
  deploy:
    description: "Whether to deploy to the target environment."
    default: "false"
  disable_termination_protection:
    description: "Whether to disable termination protection for the target environment's CloudFormation stack before attempting to terminate it."
    default: "false"
  enable_termination_protection:
    description: "Whether to enable termination protection for the target environment's CloudFormation stack after deployment."
    default: "false"
  green_env:
    description: "Name of the green environment."
    required: true
  option_settings:
    description: "Path to a JSON file consisting of an array of option settings to use when updating an existing evironment or creating a new environment."
  platform_branch_name:
    description: "Name of the platform branch to use. When creating a new environment, it will be launched with the latest version of the specified platform branch. To see the list of available platform branches, run the `aws elasticbeanstalk list-platform-branches` command."
  production_cname:
    description: "CNAME prefix for the domain that serves production traffic."
    required: true
  source_bundle:
    description: "Path to the source bundle to deploy. If not specified, the sample application will be used."
  staging_cname:
    description: "CNAME prefix for the staging environment."
    required: true
  swap_cnames:
    description: "Whether to swap the CNAMEs of the blue and green environments."
    default: "false"
  template_name:
    description: "Name of an Elastic Beanstalk configuration template to use when creating a new environment."
  terminate_unhealthy_environment:
    description: "Whether to terminate an unhealthy target environment. If set to false, the action will fail if the target environment is unhealthy."
    default: "true"
  update_environment:
    description: "Whether to update an existing environment during deployment."
    default: "true"
  update_listener_rules:
    description: "When set to true, the action will update any elbv2 listener rules on the environments' SharedLoadBalancer tagged with a `bluegreenbeanstalk:target_cname` key, whose value is equal to the staging or production CNAME prefix, so that it forwards to the corresponding target group. The action will also remove any target group from the listener before terminating the environment. The port of the process may be specified by another tag with the key `bluegreenbeanstalk:target_port` whose value is the port number. If no such tag is found, the default port of 80 will be used."
    default: "false"
  use_default_option_settings:
    description: "Whether to use default option settings when creating a new environment."
    default: "true"
  version_description:
    description: "Description to use for the new application version."
  version_label:
    description: "Version label to use for the new application version."
  wait_for_deployment:
    description: "Whether to wait for the deployment to complete."
    default: "true"
  wait_for_environment:
    description: "Whether to wait for the target environment to be ready before deployment. If set to false, the action will fail if the target environment is not ready."
    default: "true"
  wait_for_termination:
    description: "Whether to wait for an environment to be terminated. If set to false, the action will fail if the target environment is terminating."
    default: "true"
outputs:
  target_env_cname:
    description: "CNAME of the target environment."
  target_env_endpoint_url:
    description: "URL of the environment's load balancer, or an Elastic IP address when using a single instance environment."
  target_env_id:
    description: "ID of the target environment."
  target_env_json:
    description: "JSON representation of the target environment."
  target_env_name:
    description: "Name of the target environment."
  target_env_status:
    description: "Status of the target environment."
runs:
  using: "node20"
  main: "dist/index.js"

branding:
  icon: "arrow-up"
  color: "orange"
